<?php

/**
 * BasePaypalTransaction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property timestamp $timestamp
 * @property string $timezone
 * @property string $type
 * @property string $email
 * @property string $name
 * @property string $transaction_id
 * @property string $status
 * @property float $amount
 * @property string $currency_code
 * @property float $fee_amount
 * @property float $net_amount
 * 
 * @method timestamp         getTimestamp()      Returns the current record's "timestamp" value
 * @method string            getTimezone()       Returns the current record's "timezone" value
 * @method string            getType()           Returns the current record's "type" value
 * @method string            getEmail()          Returns the current record's "email" value
 * @method string            getName()           Returns the current record's "name" value
 * @method string            getTransactionId()  Returns the current record's "transaction_id" value
 * @method string            getStatus()         Returns the current record's "status" value
 * @method float             getAmount()         Returns the current record's "amount" value
 * @method string            getCurrencyCode()   Returns the current record's "currency_code" value
 * @method float             getFeeAmount()      Returns the current record's "fee_amount" value
 * @method float             getNetAmount()      Returns the current record's "net_amount" value
 * @method PaypalTransaction setTimestamp()      Sets the current record's "timestamp" value
 * @method PaypalTransaction setTimezone()       Sets the current record's "timezone" value
 * @method PaypalTransaction setType()           Sets the current record's "type" value
 * @method PaypalTransaction setEmail()          Sets the current record's "email" value
 * @method PaypalTransaction setName()           Sets the current record's "name" value
 * @method PaypalTransaction setTransactionId()  Sets the current record's "transaction_id" value
 * @method PaypalTransaction setStatus()         Sets the current record's "status" value
 * @method PaypalTransaction setAmount()         Sets the current record's "amount" value
 * @method PaypalTransaction setCurrencyCode()   Sets the current record's "currency_code" value
 * @method PaypalTransaction setFeeAmount()      Sets the current record's "fee_amount" value
 * @method PaypalTransaction setNetAmount()      Sets the current record's "net_amount" value
 * 
 * @package    payment_puller
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaypalTransaction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paypal_transaction');
        $this->hasColumn('timestamp', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('timezone', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('transaction_id', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('currency_code', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             ));
        $this->hasColumn('fee_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('net_amount', 'float', null, array(
             'type' => 'float',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}